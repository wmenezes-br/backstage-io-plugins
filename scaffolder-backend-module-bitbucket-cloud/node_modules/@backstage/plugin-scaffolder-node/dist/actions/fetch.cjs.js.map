{"version":3,"file":"fetch.cjs.js","sources":["../../src/actions/fetch.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UrlReaderService } from '@backstage/backend-plugin-api';\nimport { resolveSafeChildPath } from '@backstage/backend-plugin-api';\nimport { InputError } from '@backstage/errors';\nimport { ScmIntegrations } from '@backstage/integration';\nimport fs from 'fs-extra';\nimport path from 'path';\n\n/**\n * A helper function that reads the contents of a directory from the given URL.\n * Can be used in your own actions, and also used behind fetch:template and fetch:plain\n *\n * @public\n */\nexport async function fetchContents(options: {\n  reader: UrlReaderService;\n  integrations: ScmIntegrations;\n  baseUrl?: string;\n  fetchUrl?: string;\n  outputPath: string;\n  token?: string;\n}) {\n  const {\n    reader,\n    integrations,\n    baseUrl,\n    fetchUrl = '.',\n    outputPath,\n    token,\n  } = options;\n\n  const fetchUrlIsAbsolute = isFetchUrlAbsolute(fetchUrl);\n\n  // We handle both file locations and url ones\n  if (!fetchUrlIsAbsolute && baseUrl?.startsWith('file://')) {\n    const basePath = baseUrl.slice('file://'.length);\n    const srcDir = resolveSafeChildPath(path.dirname(basePath), fetchUrl);\n    await fs.copy(srcDir, outputPath);\n  } else {\n    const readUrl = getReadUrl(fetchUrl, baseUrl, integrations);\n\n    const res = await reader.readTree(readUrl, { token });\n    await fs.ensureDir(outputPath);\n    await res.dir({ targetDir: outputPath });\n  }\n}\n\n/**\n * A helper function that reads the content of a single file from the given URL.\n * Can be used in your own actions, and also used behind `fetch:plain:file`\n *\n * @public\n */\nexport async function fetchFile(options: {\n  reader: UrlReaderService;\n  integrations: ScmIntegrations;\n  baseUrl?: string;\n  fetchUrl?: string;\n  outputPath: string;\n  token?: string;\n}) {\n  const {\n    reader,\n    integrations,\n    baseUrl,\n    fetchUrl = '.',\n    outputPath,\n    token,\n  } = options;\n\n  const fetchUrlIsAbsolute = isFetchUrlAbsolute(fetchUrl);\n\n  // We handle both file locations and url ones\n  if (!fetchUrlIsAbsolute && baseUrl?.startsWith('file://')) {\n    const basePath = baseUrl.slice('file://'.length);\n    const src = resolveSafeChildPath(path.dirname(basePath), fetchUrl);\n    await fs.copyFile(src, outputPath);\n  } else {\n    const readUrl = getReadUrl(fetchUrl, baseUrl, integrations);\n\n    const res = await reader.readUrl(readUrl, { token });\n    await fs.ensureDir(path.dirname(outputPath));\n    const buffer = await res.buffer();\n    await fs.outputFile(outputPath, buffer);\n  }\n}\n\nfunction isFetchUrlAbsolute(fetchUrl: string) {\n  let fetchUrlIsAbsolute = false;\n  try {\n    // eslint-disable-next-line no-new\n    new URL(fetchUrl);\n    fetchUrlIsAbsolute = true;\n  } catch {\n    /* ignored */\n  }\n  return fetchUrlIsAbsolute;\n}\n\nfunction getReadUrl(\n  fetchUrl: string,\n  baseUrl: string | undefined,\n  integrations: ScmIntegrations,\n) {\n  if (isFetchUrlAbsolute(fetchUrl)) {\n    return fetchUrl;\n  } else if (baseUrl) {\n    const integration = integrations.byUrl(baseUrl);\n    if (!integration) {\n      throw new InputError(`No integration found for location ${baseUrl}`);\n    }\n\n    return integration.resolveUrl({\n      url: fetchUrl,\n      base: baseUrl,\n    });\n  }\n  throw new InputError(\n    `Failed to fetch, template location could not be determined and the fetch URL is relative, ${fetchUrl}`,\n  );\n}\n"],"names":["resolveSafeChildPath","path","fs","InputError"],"mappings":"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"}