{"version":3,"file":"InMemoryCatalogClient.cjs.js","sources":["../../src/testUtils/InMemoryCatalogClient.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AddLocationRequest,\n  AddLocationResponse,\n  CATALOG_FILTER_EXISTS,\n  CatalogApi,\n  EntityFilterQuery,\n  GetEntitiesByRefsRequest,\n  GetEntitiesByRefsResponse,\n  GetEntitiesRequest,\n  GetEntitiesResponse,\n  GetEntityAncestorsRequest,\n  GetEntityAncestorsResponse,\n  GetEntityFacetsRequest,\n  GetEntityFacetsResponse,\n  Location,\n  QueryEntitiesRequest,\n  QueryEntitiesResponse,\n  ValidateEntityResponse,\n} from '@backstage/catalog-client';\nimport {\n  CompoundEntityRef,\n  DEFAULT_NAMESPACE,\n  Entity,\n  parseEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { NotFoundError, NotImplementedError } from '@backstage/errors';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { traverse } from '../../../../plugins/catalog-backend/src/database/operations/stitcher/buildEntitySearch';\n\nfunction buildEntitySearch(entity: Entity) {\n  const rows = traverse(entity);\n\n  if (entity.metadata?.name) {\n    rows.push({ key: 'metadata.name', value: entity.metadata.name });\n  }\n  if (entity.metadata?.namespace) {\n    rows.push({ key: 'metadata.namespace', value: entity.metadata.namespace });\n  }\n  if (entity.metadata?.uid) {\n    rows.push({ key: 'metadata.uid', value: entity.metadata.uid });\n  }\n\n  if (!entity.metadata.namespace) {\n    rows.push({ key: 'metadata.namespace', value: DEFAULT_NAMESPACE });\n  }\n\n  // Visit relations\n  for (const relation of entity.relations ?? []) {\n    rows.push({\n      key: `relations.${relation.type}`,\n      value: relation.targetRef,\n    });\n  }\n\n  return rows;\n}\n\nfunction createFilter(\n  filterOrFilters?: EntityFilterQuery,\n): (entity: Entity) => boolean {\n  if (!filterOrFilters) {\n    return () => true;\n  }\n\n  const filters = [filterOrFilters].flat();\n\n  return entity => {\n    const rows = buildEntitySearch(entity);\n\n    return filters.some(filter => {\n      for (const [key, expectedValue] of Object.entries(filter)) {\n        const searchValues = rows\n          .filter(row => row.key === key.toLocaleLowerCase('en-US'))\n          .map(row => row.value?.toString().toLocaleLowerCase('en-US'));\n\n        if (searchValues.length === 0) {\n          return false;\n        }\n        if (expectedValue === CATALOG_FILTER_EXISTS) {\n          continue;\n        }\n        if (\n          !searchValues?.includes(\n            String(expectedValue).toLocaleLowerCase('en-US'),\n          )\n        ) {\n          return false;\n        }\n      }\n      return true;\n    });\n  };\n}\n\n/**\n * Implements a VERY basic fake catalog client that stores entities in memory.\n * It has severely limited functionality, and is only useful under certain\n * circumstances in tests.\n *\n * @public\n */\nexport class InMemoryCatalogClient implements CatalogApi {\n  #entities: Entity[];\n\n  constructor(options?: { entities?: Entity[] }) {\n    this.#entities = options?.entities?.slice() ?? [];\n  }\n\n  async getEntities(\n    request?: GetEntitiesRequest,\n  ): Promise<GetEntitiesResponse> {\n    const filter = createFilter(request?.filter);\n    return { items: this.#entities.filter(filter) };\n  }\n\n  async getEntitiesByRefs(\n    request: GetEntitiesByRefsRequest,\n  ): Promise<GetEntitiesByRefsResponse> {\n    const filter = createFilter(request.filter);\n    const refMap = this.#createEntityRefMap();\n    return {\n      items: request.entityRefs\n        .map(ref => refMap.get(ref))\n        .map(e => (e && filter(e) ? e : undefined)),\n    };\n  }\n\n  async queryEntities(\n    request?: QueryEntitiesRequest,\n  ): Promise<QueryEntitiesResponse> {\n    if (request && 'cursor' in request) {\n      return { items: [], pageInfo: {}, totalItems: 0 };\n    }\n    const filter = createFilter(request?.filter);\n    const items = this.#entities.filter(filter);\n    // TODO(Rugvip): Pagination\n    return {\n      items,\n      pageInfo: {},\n      totalItems: items.length,\n    };\n  }\n\n  async getEntityAncestors(\n    request: GetEntityAncestorsRequest,\n  ): Promise<GetEntityAncestorsResponse> {\n    const entity = this.#createEntityRefMap().get(request.entityRef);\n    if (!entity) {\n      throw new NotFoundError(`Entity with ref ${request.entityRef} not found`);\n    }\n    return {\n      items: [{ entity, parentEntityRefs: [] }],\n      rootEntityRef: request.entityRef,\n    };\n  }\n\n  async getEntityByRef(\n    entityRef: string | CompoundEntityRef,\n  ): Promise<Entity | undefined> {\n    return this.#createEntityRefMap().get(\n      stringifyEntityRef(parseEntityRef(entityRef)),\n    );\n  }\n\n  async removeEntityByUid(uid: string): Promise<void> {\n    const index = this.#entities.findIndex(e => e.metadata.uid === uid);\n    if (index !== -1) {\n      this.#entities.splice(index, 1);\n    }\n  }\n\n  async refreshEntity(_entityRef: string): Promise<void> {}\n\n  async getEntityFacets(\n    request: GetEntityFacetsRequest,\n  ): Promise<GetEntityFacetsResponse> {\n    const filter = createFilter(request.filter);\n    const filteredEntities = this.#entities.filter(filter);\n    const facets = Object.fromEntries(\n      request.facets.map(facet => {\n        const facetValues = new Map<string, number>();\n        for (const entity of filteredEntities) {\n          const rows = buildEntitySearch(entity);\n          const value = rows.find(\n            row => row.key === facet.toLocaleLowerCase('en-US'),\n          )?.value;\n          if (value) {\n            facetValues.set(\n              String(value),\n              (facetValues.get(String(value)) ?? 0) + 1,\n            );\n          }\n        }\n        const counts = Array.from(facetValues.entries()).map(\n          ([value, count]) => ({ value, count }),\n        );\n        return [facet, counts];\n      }),\n    );\n    return {\n      facets,\n    };\n  }\n\n  async getLocationById(_id: string): Promise<Location | undefined> {\n    throw new NotImplementedError('Method not implemented.');\n  }\n\n  async getLocationByRef(_locationRef: string): Promise<Location | undefined> {\n    throw new NotImplementedError('Method not implemented.');\n  }\n\n  async addLocation(\n    _location: AddLocationRequest,\n  ): Promise<AddLocationResponse> {\n    throw new NotImplementedError('Method not implemented.');\n  }\n\n  async removeLocationById(_id: string): Promise<void> {\n    throw new NotImplementedError('Method not implemented.');\n  }\n\n  async getLocationByEntity(\n    _entityRef: string | CompoundEntityRef,\n  ): Promise<Location | undefined> {\n    throw new NotImplementedError('Method not implemented.');\n  }\n\n  async validateEntity(\n    _entity: Entity,\n    _locationRef: string,\n  ): Promise<ValidateEntityResponse> {\n    throw new NotImplementedError('Method not implemented.');\n  }\n\n  #createEntityRefMap() {\n    return new Map(this.#entities.map(e => [stringifyEntityRef(e), e]));\n  }\n}\n"],"names":["traverse","DEFAULT_NAMESPACE","CATALOG_FILTER_EXISTS","NotFoundError","stringifyEntityRef","parseEntityRef","NotImplementedError"],"mappings":"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"}